import java.io.*;
import java.util.*;

public class main {
	static int N, M;
	static int[][] arr;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		arr = new int[N+1][N+1];
		
		for (int i=0; i<M; i++) {
			st = new StringTokenizer(br.readLine());
			int p = Integer.parseInt(st.nextToken());
			int q = Integer.parseInt(st.nextToken());
			arr[p][q] = 1;	//p<q 인 경우
		}
		
		floyd();
		
		int ans = 0;
		for (int i=1; i<=N; i++) {
			boolean check = true;
			for (int j=1; j<=N; j++) {
				if (i == j) {
					continue;
				}
				if (arr[i][j] != 1 && arr[j][i] != 1) {
					check = false;
					break;
				}
			}
			if (check) {
				ans ++;
			}
		}
		System.out.println(ans);
	}
	
	static void floyd() {
		for (int k=1; k<=N; k++) {
			for (int i=1; i<=N; i++) {
				for (int j=1; j<=N; j++) {
					if (arr[i][k] == 1 && arr[k][j] == 1) {
						arr[i][j] = 1;
					}
				}
			}
		}
	}

}
